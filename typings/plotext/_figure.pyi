"""
This type stub file was generated by pyright.
"""

class _figure_class:
    def __init__(self, master=..., parent=...) -> None:
        ...
    
    def subplot(self, row=..., col=...): # -> _figure_class:
        ...
    
    def subplots(self, rows=..., cols=...): # -> Self:
        ...
    
    def title(self, label=...): # -> None:
        ...
    
    def xlabel(self, label=..., xside=...): # -> None:
        ...
    
    def ylabel(self, label=..., yside=...): # -> None:
        ...
    
    def xlim(self, left=..., right=..., xside=...): # -> None:
        ...
    
    def ylim(self, lower=..., upper=..., yside=...): # -> None:
        ...
    
    def xscale(self, scale=..., xside=...): # -> None:
        ...
    
    def yscale(self, scale=..., yside=...): # -> None:
        ...
    
    def xticks(self, ticks=..., labels=..., xside=...): # -> None:
        ...
    
    def yticks(self, ticks=..., labels=..., yside=...): # -> None:
        ...
    
    def xfrequency(self, frequency=..., xside=...): # -> None:
        ...
    
    def yfrequency(self, frequency=..., yside=...): # -> None:
        ...
    
    def xreverse(self, reverse=..., xside=...): # -> None:
        ...
    
    def yreverse(self, reverse=..., yside=...): # -> None:
        ...
    
    def xaxes(self, lower=..., upper=...): # -> None:
        ...
    
    def yaxes(self, left=..., right=...): # -> None:
        ...
    
    def frame(self, frame=...): # -> None:
        ...
    
    def grid(self, horizontal=..., vertical=...): # -> None:
        ...
    
    def canvas_color(self, color=...): # -> None:
        ...
    
    def axes_color(self, color=...): # -> None:
        ...
    
    def ticks_color(self, color=...): # -> None:
        ...
    
    def ticks_style(self, style=...): # -> None:
        ...
    
    def theme(self, theme=...): # -> None:
        ...
    
    def clear_figure(self): # -> None:
        ...
    
    clf = ...
    def clear_data(self): # -> None:
        ...
    
    cld = ...
    def clear_color(self): # -> None:
        ...
    
    clc = ...
    def clear_terminal(self, lines=...): # -> None:
        ...
    
    clt = ...
    def scatter(self, *args, marker=..., color=..., style=..., fillx=..., filly=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def plot(self, *args, marker=..., color=..., style=..., fillx=..., filly=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., reset_ticks=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def multiple_bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., reset_ticks=..., xside=..., yside=..., labels=...): # -> None:
        ...
    
    def stacked_bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., reset_ticks=..., xside=..., yside=..., labels=...): # -> None:
        ...
    
    def hist(self, data, bins=..., marker=..., color=..., fill=..., norm=..., width=..., orientation=..., minimum=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def candlestick(self, dates, data, colors=..., orientation=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def box(self, *args, quintuples=..., colors=..., fill=..., width=..., orientation=..., minimum=..., reset_ticks=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def error(self, *args, xerr=..., yerr=..., color=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def event_plot(self, data, marker=..., color=..., orientation=..., side=...): # -> None:
        ...
    
    eventplot = ...
    def vertical_line(self, coordinate, color=..., xside=...): # -> None:
        ...
    
    vline = ...
    def horizontal_line(self, coordinate, color=..., yside=...): # -> None:
        ...
    
    hline = ...
    def text(self, label, x, y, color=..., background=..., style=..., orientation=..., alignment=..., xside=..., yside=...): # -> None:
        ...
    
    def rectangle(self, x=..., y=..., marker=..., color=..., lines=..., fill=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def polygon(self, x=..., y=..., radius=..., sides=..., marker=..., color=..., lines=..., fill=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def confusion_matrix(self, actual, predicted, color=..., style=..., labels=...): # -> None:
        ...
    
    cmatrix = ...
    def indicator(self, value, label=..., color=..., style=...): # -> None:
        ...
    
    def matrix_plot(self, matrix, marker=..., style=..., fast=...): # -> None:
        ...
    
    def heatmap(self, dataframe, color=..., style=...): # -> None:
        ...
    
    def image_plot(self, path, marker=..., style=..., fast=..., grayscale=...): # -> None:
        ...
    
    def date_form(self, input_form=..., output_form=...): # -> None:
        ...
    
    def set_time0(self, string, input_form=...): # -> None:
        ...
    
    def today_datetime(self):
        ...
    
    def today_string(self, output_form=...):
        ...
    
    def datetime_to_string(self, datetime, output_form=...):
        ...
    
    def datetimes_to_strings(self, datetimes, output_form=...):
        ...
    
    def string_to_datetime(self, string, input_form=...):
        ...
    
    def string_to_time(self, string, input_form=...):
        ...
    
    def strings_to_time(self, string, input_form=...):
        ...
    
    def show(self): # -> None:
        ...
    
    def build(self): # -> str:
        ...
    
    def main(self): # -> Self:
        ...
    
    def plot_size(self, width=..., height=...): # -> tuple[int | None, int | None]:
        ...
    
    plotsize = ...
    def take_min(self): # -> None:
        ...
    
    def save_fig(self, path=..., append=..., keep_colors=...): # -> None:
        ...
    
    savefig = ...


