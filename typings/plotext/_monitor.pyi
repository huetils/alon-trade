"""
This type stub file was generated by pyright.
"""

from plotext._build import build_class

class monitor_class(build_class):
    def __init__(self) -> None:
        ...
    
    def copy(self): # -> Self:
        ...
    
    def set_size(self, size): # -> None:
        ...
    
    def set_date(self, date): # -> None:
        ...
    
    def labels_init(self): # -> None:
        ...
    
    def axes_init(self): # -> None:
        ...
    
    def color_init(self): # -> None:
        ...
    
    def data_init(self): # -> None:
        ...
    
    def lines_init(self): # -> None:
        ...
    
    def text_init(self): # -> None:
        ...
    
    def draw_init(self): # -> None:
        ...
    
    def set_title(self, title=...): # -> None:
        ...
    
    def set_xlabel(self, label=..., xside=...): # -> None:
        ...
    
    def set_ylabel(self, label=..., yside=...): # -> None:
        ...
    
    def set_xlim(self, left=..., right=..., xside=...): # -> None:
        ...
    
    def set_ylim(self, lower=..., upper=..., yside=...): # -> None:
        ...
    
    def set_xscale(self, scale=..., xside=...): # -> None:
        ...
    
    def set_yscale(self, scale=..., yside=...): # -> None:
        ...
    
    def set_xticks(self, ticks=..., labels=..., xside=...): # -> None:
        ...
    
    def set_yticks(self, ticks=..., labels=..., yside=...): # -> None:
        ...
    
    def set_xfrequency(self, frequency=..., xside=...): # -> None:
        ...
    
    def set_yfrequency(self, frequency=..., yside=...): # -> None:
        ...
    
    def set_xreverse(self, reverse=..., xside=...): # -> None:
        ...
    
    def set_yreverse(self, reverse=..., yside=...): # -> None:
        ...
    
    def set_xaxes(self, lower=..., upper=...): # -> None:
        ...
    
    def set_yaxes(self, left=..., right=...): # -> None:
        ...
    
    def set_frame(self, frame=...): # -> None:
        ...
    
    def set_grid(self, horizontal=..., vertical=...): # -> None:
        ...
    
    def set_color(self, color=...): # -> str:
        ...
    
    def set_canvas_color(self, color=...): # -> None:
        ...
    
    def set_axes_color(self, color=...): # -> None:
        ...
    
    def set_ticks_color(self, color=...): # -> None:
        ...
    
    def set_ticks_style(self, style=...): # -> None:
        ...
    
    def set_theme(self, theme=...): # -> None:
        ...
    
    def clear_color(self): # -> None:
        ...
    
    def set_label(self, label=...): # -> str | None:
        ...
    
    def correct_xside(self, xside=...): # -> str:
        ...
    
    def correct_yside(self, yside=...): # -> str:
        ...
    
    def xside_to_pos(self, xside=...): # -> int:
        ...
    
    def yside_to_pos(self, yside=...): # -> int:
        ...
    
    def draw(self, *args, **kwargs): # -> None:
        ...
    
    def add_xside(self, xside=...): # -> None:
        ...
    
    def add_yside(self, yside=...): # -> None:
        ...
    
    def add_data(self, *args): # -> None:
        ...
    
    def add_lines(self, lines): # -> None:
        ...
    
    def add_markers(self, marker=...): # -> None:
        ...
    
    def add_colors(self, color=...): # -> None:
        ...
    
    def add_styles(self, style=...): # -> None:
        ...
    
    def add_fillx(self, fillx=...): # -> None:
        ...
    
    def add_filly(self, filly=...): # -> None:
        ...
    
    def add_label(self, label=...): # -> None:
        ...
    
    def to_time(self, data): # -> tuple[Any, bool]:
        ...
    
    def check_marker(self, marker=...): # -> str:
        ...
    
    def check_color(self, color=...):
        ...
    
    def next_color(self):
        ...
    
    def check_style(self, style=...): # -> str | None:
        ...
    
    def check_fill(self, fill=...): # -> str | Literal[0, False]:
        ...
    
    def draw_bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., offset=..., reset_ticks=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_multiple_bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., offset=..., reset_ticks=..., xside=..., yside=..., labels=...): # -> None:
        ...
    
    def draw_stacked_bar(self, *args, marker=..., color=..., fill=..., width=..., orientation=..., minimum=..., offset=..., reset_ticks=..., xside=..., yside=..., labels=...): # -> None:
        ...
    
    def draw_hist(self, data, bins=..., marker=..., color=..., fill=..., norm=..., width=..., orientation=..., minimum=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_candlestick(self, dates, data, colors=..., orientation=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_box(self, *args, xside=..., yside=..., orientation=..., colors=..., label=..., fill=..., width=..., minimum=..., offset=..., reset_ticks=..., quintuples=...): # -> None:
        ...
    
    def draw_error(self, *args, xerr=..., yerr=..., color=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_event_plot(self, data, marker=..., color=..., orientation=..., side=...): # -> None:
        ...
    
    def draw_vertical_line(self, coordinate, color=..., xside=...): # -> None:
        ...
    
    def draw_horizontal_line(self, coordinate, color=..., yside=...): # -> None:
        ...
    
    def draw_text(self, text, x, y, xside=..., yside=..., color=..., background=..., style=..., orientation=..., alignment=...): # -> None:
        ...
    
    def draw_rectangle(self, x=..., y=..., marker=..., color=..., lines=..., fill=..., reset_lim=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_polygon(self, x=..., y=..., radius=..., sides=..., marker=..., color=..., lines=..., fill=..., reset_lim=..., xside=..., yside=..., label=...): # -> None:
        ...
    
    def draw_confusion_matrix(self, actual, predicted, color=..., style=..., labels=...): # -> None:
        ...
    
    def draw_indicator(self, value, label=..., color=..., style=...): # -> None:
        ...
    
    def draw_matrix(self, matrix, marker=..., style=..., fast=...): # -> None:
        ...
    
    def draw_heatmap(self, dataframe, color=..., style=...): # -> None:
        ...
    
    def draw_image(self, path, marker=..., style=..., fast=..., grayscale=...): # -> None:
        ...
    
    def check_orientation(self, orientation=..., default_index=...): # -> str:
        ...
    
    def check_alignment(self, alignment=...): # -> str:
        ...
    


