"""
This type stub file was generated by pyright.
"""

class Precise:
    def __init__(self, number, decimals=...) -> None: ...
    def __add__(self, other):  # -> Precise:
        ...
    def __sub__(self, other):  # -> Precise:
        ...
    def __mul__(self, other):  # -> Precise:
        ...
    def __truediv__(self, other):  # -> Precise:
        ...
    def __mod__(self, other):  # -> Precise:
        ...
    def __neg__(self):  # -> Precise:
        ...
    def __abs__(self):  # -> Precise:
        ...
    def __min__(self, other):  # -> Self:
        ...
    def __max__(self, other):  # -> Self:
        ...
    def __lt__(self, other) -> bool: ...
    def __le__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __eq__(self, other) -> bool: ...
    def mul(self, other):  # -> Precise:
        ...
    def div(self, other, precision=...):  # -> Precise:
        ...
    def add(self, other):  # -> Precise:
        ...
    def sub(self, other):  # -> Precise:
        ...
    def abs(self):  # -> Precise:
        ...
    def neg(self):  # -> Precise:
        ...
    def mod(self, other):  # -> Precise:
        ...
    def orn(self, other):  # -> Precise:
        ...
    def min(self, other):  # -> Self:
        ...
    def max(self, other):  # -> Self:
        ...
    def gt(self, other):  # -> bool:
        ...
    def ge(self, other):  # -> bool:
        ...
    def lt(self, other): ...
    def le(self, other): ...
    def reduce(self):  # -> Self | None:
        ...
    def equals(self, other): ...
    def __str__(self) -> str: ...
    def __repr__(self):  # -> str:
        ...
    def __float__(self):  # -> float:
        ...
    @staticmethod
    def string_mul(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_div(string1, string2, precision=...):  # -> str | None:
        ...
    @staticmethod
    def string_add(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_sub(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_abs(string):  # -> str | None:
        ...
    @staticmethod
    def string_neg(string):  # -> str | None:
        ...
    @staticmethod
    def string_mod(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_or(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_equals(string1, string2):  # -> bool | None:
        ...
    @staticmethod
    def string_eq(string1, string2):  # -> bool | None:
        ...
    @staticmethod
    def string_min(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_max(string1, string2):  # -> str | None:
        ...
    @staticmethod
    def string_gt(string1, string2):  # -> bool | None:
        ...
    @staticmethod
    def string_ge(string1, string2):  # -> bool | None:
        ...
    @staticmethod
    def string_lt(string1, string2):  # -> bool | None:
        ...
    @staticmethod
    def string_le(string1, string2):  # -> bool | None:
        ...
