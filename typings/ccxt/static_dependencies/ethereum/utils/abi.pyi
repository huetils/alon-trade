"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict

def collapse_if_tuple(abi: Dict[str, Any]) -> str:
    """
    Converts a tuple from a dict to a parenthesized list of its types.

    >>> from eth_utils.abi import collapse_if_tuple
    >>> collapse_if_tuple(
    ...     {
    ...         'components': [
    ...             {'name': 'anAddress', 'type': 'address'},
    ...             {'name': 'anInt', 'type': 'uint256'},
    ...             {'name': 'someBytes', 'type': 'bytes'},
    ...         ],
    ...         'type': 'tuple',
    ...     }
    ... )
    '(address,uint256,bytes)'
    """
    ...

def function_signature_to_4byte_selector(event_signature: str) -> bytes: ...
def function_abi_to_4byte_selector(function_abi: Dict[str, Any]) -> bytes: ...
def event_signature_to_log_topic(event_signature: str) -> bytes: ...
def event_abi_to_log_topic(event_abi: Dict[str, Any]) -> bytes: ...
