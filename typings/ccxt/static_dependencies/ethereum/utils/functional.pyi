"""
This type stub file was generated by pyright.
"""

import collections
from typing import Callable, Dict, Iterable, List, Mapping, Set, Tuple, TypeVar, Union

T = TypeVar("T")

def identity(value: T) -> T: ...

TGIn = TypeVar("TGIn")
TGOut = TypeVar("TGOut")
TFOut = TypeVar("TFOut")

def combine(
    f: Callable[[TGOut], TFOut], g: Callable[[TGIn], TGOut]
) -> Callable[[TGIn], TFOut]: ...
def apply_to_return_value(
    callback: Callable[..., T],
) -> Callable[..., Callable[..., T]]: ...

TVal = TypeVar("TVal")
TKey = TypeVar("TKey")
to_tuple: Callable[
    [Callable[..., Iterable[TVal]]], Callable[..., Tuple[TVal, ...]]
] = ...
to_list: Callable[[Callable[..., Iterable[TVal]]], Callable[..., List[TVal]]] = ...
to_set: Callable[[Callable[..., Iterable[TVal]]], Callable[..., Set[TVal]]] = ...
to_dict: Callable[
    [Callable[..., Iterable[Union[Mapping[TKey, TVal], Tuple[TKey, TVal]]]]],
    Callable[..., Dict[TKey, TVal]],
] = ...
to_ordered_dict: Callable[
    [Callable[..., Iterable[Union[Mapping[TKey, TVal], Tuple[TKey, TVal]]]]],
    Callable[..., collections.OrderedDict[TKey, TVal]],
] = ...
sort_return = ...
flatten_return = ...
reversed_return = ...
