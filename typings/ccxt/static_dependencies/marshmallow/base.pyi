"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod

"""Abstract base classes.

These are necessary to avoid circular imports between schema.py and fields.py.

.. warning::

    This module is treated as private API.
    Users should not need to use this module directly.
"""

class FieldABC(ABC):
    """Abstract base class from which all Field classes inherit."""

    parent = ...
    name = ...
    root = ...
    @abstractmethod
    def serialize(self, attr, obj, accessor=...):  # -> None:
        ...
    @abstractmethod
    def deserialize(self, value):  # -> None:
        ...

class SchemaABC(ABC):
    """Abstract base class from which all Schemas inherit."""
    @abstractmethod
    def dump(self, obj, *, many: bool | None = ...):  # -> None:
        ...
    @abstractmethod
    def dumps(self, obj, *, many: bool | None = ...):  # -> None:
        ...
    @abstractmethod
    def load(
        self, data, *, many: bool | None = ..., partial=..., unknown=...
    ):  # -> None:
        ...
    @abstractmethod
    def loads(
        self, json_data, *, many: bool | None = ..., partial=..., unknown=..., **kwargs
    ):  # -> None:
        ...
