"""
This type stub file was generated by pyright.
"""

from typing import Sequence

def compute_address(
    *,
    class_hash: int,
    constructor_calldata: Sequence[int],
    salt: int,
    deployer_address: int = ...,
) -> int:
    """
    Computes the contract address in the Starknet network - a unique identifier of the contract.

    :param class_hash: class hash of the contract
    :param constructor_calldata: calldata for the contract constructor
    :param salt: salt used to calculate contract address
    :param deployer_address: address of the deployer (if not provided default 0 is used)
    :return: Contract's address
    """
    ...

def get_checksum_address(address: str) -> str:
    """
    Outputs formatted checksum address.

    Follows implementation of starknet.js. It is not compatible with EIP55 as it treats hex string as encoded number,
    instead of encoding it as ASCII string.

    :param address: Address to encode
    :return: Checksum address
    """
    ...

def is_checksum_address(address: str) -> bool:
    """
    Checks if provided string is in a checksum address format.
    """
    ...
