"""
This type stub file was generated by pyright.
"""

'''
RFC 6979:
    Deterministic Usage of the Digital Signature Algorithm (DSA) and
    Elliptic Curve Digital Signature Algorithm (ECDSA)

    http://tools.ietf.org/html/rfc6979

Many thanks to Coda Hale for his implementation in Go language:
    https://github.com/codahale/rfc6979
'''
def bit_length(num): # -> int:
    ...

def bits2int(data, qlen): # -> int:
    ...

def bits2octets(data, order): # -> bytes:
    ...

def generate_k(order, secexp, hash_func, data, retry_gen=..., extra_entropy=...): # -> int:
    '''
        order - order of the DSA generator used in the signature
        secexp - secure exponent (private key) in numeric form
        hash_func - reference to the same hash function used for generating hash
        data - hash in binary form of the signing data
        retry_gen - int - how many good 'k' values to skip before returning
        extra_entropy - extra added data in binary form as per section-3.6 of
            rfc6979
    '''
    ...

